{"ast":null,"code":"var _jsxFileName = \"/Users/kunliu/Documents/reactapp/my-react-app/src/components/CoverLetterGenerator/CoverLetterGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CoverLetterGenerator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CoverLetterGenerator() {\n  _s();\n  const [jobDescription, setJobDescription] = useState('');\n  const [resume, setResume] = useState(null);\n  const [coverLetter, setCoverLetter] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    setResume(file);\n  };\n  const generateCoverLetter = async () => {\n    setIsGenerating(true);\n    // 这里应该是调用 AI API 生成 cover letter 的逻辑\n    // 为了演示，我们使用 setTimeout 模拟 API 调用\n    setTimeout(() => {\n      setCoverLetter(`Dear Hiring Manager,\n\nI am writing to express my strong interest in the [Job Title] position at [Company Name], as advertised. After carefully reviewing the job description, I am confident that my skills and experiences align well with the requirements of this role.\n\n[Here, the AI would generate content based on the job description and resume]\n\nThank you for considering my application. I look forward to the opportunity to further discuss how my background, skills and enthusiam can contribute to your team.\n\nSincerely,\n[Your Name]`);\n      setIsGenerating(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cover-letter-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cover Letter Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"job-description\",\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"job-description\",\n          value: jobDescription,\n          onChange: e => setJobDescription(e.target.value),\n          placeholder: \"Paste the job description here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"resume-upload\",\n          children: \"Upload Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"resume-upload\",\n          onChange: handleFileUpload,\n          accept: \".pdf,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), resume && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: resume.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateCoverLetter,\n        disabled: !jobDescription || !resume || isGenerating,\n        children: isGenerating ? 'Generating...' : 'Generate Cover Letter'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: coverLetter,\n        readOnly: true,\n        placeholder: \"Your generated cover letter will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(CoverLetterGenerator, \"SV1tdqH/qNDl2ZHYg1zTrXUDpcY=\");\n_c = CoverLetterGenerator;\nexport default CoverLetterGenerator;\nvar _c;\n$RefreshReg$(_c, \"CoverLetterGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CoverLetterGenerator","_s","jobDescription","setJobDescription","resume","setResume","coverLetter","setCoverLetter","isGenerating","setIsGenerating","handleFileUpload","event","file","target","files","generateCoverLetter","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","placeholder","type","accept","name","onClick","disabled","readOnly","_c","$RefreshReg$"],"sources":["/Users/kunliu/Documents/reactapp/my-react-app/src/components/CoverLetterGenerator/CoverLetterGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CoverLetterGenerator.css';\n\nfunction CoverLetterGenerator() {\n  const [jobDescription, setJobDescription] = useState('');\n  const [resume, setResume] = useState(null);\n  const [coverLetter, setCoverLetter] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    setResume(file);\n  };\n\n  const generateCoverLetter = async () => {\n    setIsGenerating(true);\n    // 这里应该是调用 AI API 生成 cover letter 的逻辑\n    // 为了演示，我们使用 setTimeout 模拟 API 调用\n    setTimeout(() => {\n      setCoverLetter(`Dear Hiring Manager,\n\nI am writing to express my strong interest in the [Job Title] position at [Company Name], as advertised. After carefully reviewing the job description, I am confident that my skills and experiences align well with the requirements of this role.\n\n[Here, the AI would generate content based on the job description and resume]\n\nThank you for considering my application. I look forward to the opportunity to further discuss how my background, skills and enthusiam can contribute to your team.\n\nSincerely,\n[Your Name]`);\n      setIsGenerating(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"cover-letter-generator\">\n      <div className=\"input-section\">\n        <h2>Cover Letter Generator</h2>\n        <div className=\"input-group\">\n          <label htmlFor=\"job-description\">Job Description</label>\n          <textarea\n            id=\"job-description\"\n            value={jobDescription}\n            onChange={(e) => setJobDescription(e.target.value)}\n            placeholder=\"Paste the job description here...\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"resume-upload\">Upload Resume</label>\n          <input\n            type=\"file\"\n            id=\"resume-upload\"\n            onChange={handleFileUpload}\n            accept=\".pdf,.doc,.docx\"\n          />\n          {resume && <p className=\"file-name\">{resume.name}</p>}\n        </div>\n        <button \n          onClick={generateCoverLetter} \n          disabled={!jobDescription || !resume || isGenerating}\n        >\n          {isGenerating ? 'Generating...' : 'Generate Cover Letter'}\n        </button>\n      </div>\n      <div className=\"output-section\">\n        <h3>Generated Cover Letter</h3>\n        <textarea\n          value={coverLetter}\n          readOnly\n          placeholder=\"Your generated cover letter will appear here...\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CoverLetterGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}